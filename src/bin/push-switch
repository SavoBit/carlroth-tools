#!/usr/bin/python

"""push-switch
"""

import sys, os
import glob

bindir = os.path.abspath(os.path.dirname(__file__))
toolsdir = os.path.dirname(os.path.dirname(bindir))
sys.path.append(os.path.join(toolsdir, "src/python"))

import ConsoleUtils

switch = sys.argv[1]

sub = ConsoleUtils.SwitchRootSubprocess.fromTrack(switch)
if sub is None:
   raise SystemExit("cannot find switch")

if sub.testBatchSsh():
    print "root ssh ok"
else:
    print "root ssh not ok"

    ##tsub = ConsoleUtils.TrackConsoleSubprocess(switch)
    ##tsub.enableRoot()

    sub.enableRoot()

    if not sub.testBatchSsh():
        raise SystemExit("cannot enable root")

srcdir = os.environ.get('SWITCHLIGHT')
pydir = "/usr/lib/python2.7/dist-packages"
srcpat = os.path.join(srcdir, "components/all/slrest/src/python/slrest/base/*.py")
dstdir = os.path.join(pydir, "slrest/base/.")
args = glob.glob(srcpat) + [dstdir,]
sub.check_scp(*args,
              host=switch, user="root",
              direction=ConsoleUtils.OUT, quote=False)

srcpat = os.path.join(srcdir, "components/all/slrest/src/python/slrest/api/v1/*.py")
dstdir = os.path.join(pydir, "slrest/api/v1/.")
args = glob.glob(srcpat) + [dstdir,]
sub.check_scp(*args,
              host=switch, user="root",
              direction=ConsoleUtils.OUT, quote=False)

srcpat = os.path.join(srcdir, "components/all/slconfig/src/python/slrest/api/v1_config/*.py")
dstdir = os.path.join(pydir, "slrest/api/v1_config/.")
args = glob.glob(srcpat) + [dstdir,]
sub.check_scp(*args,
              host=switch, user="root",
              direction=ConsoleUtils.OUT, quote=False)

dstpath = os.path.join(pydir, "slrest/base", "*.pyc")
sub.check_call(('rm', '-vf', dstpath,))

dstpath = os.path.join(pydir, "slrest/api/v1", "*.pyc")
sub.check_call(('rm', '-vf', dstpath,))

dstpath = os.path.join(pydir, "slrest/api/v1_config", "*.pyc")
sub.check_call(('rm', '-vf', dstpath,))

##sub.check_call(('service', 'slrest', 'stop',))
##sub.check_call(('service', 'slrest', 'start',))

psub = ConsoleUtils.SwitchPcliSubprocess(sub.host, user='root')
psub.call("show version")

sys.exit(0)
