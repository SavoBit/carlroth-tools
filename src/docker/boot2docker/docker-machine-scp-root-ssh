#!/usr/bin/python

"""remote scp adapter for 'docker-machine-scp-root'

Ha ha, 'docker ssh' doesn't do buffering properly for scp.
"""

import sys, os
import subprocess
import json

args = list(sys.argv[1:])
while args:
    if args[0] == '--':
        args.pop(0)
        break
    args.pop(0)

machine = args.pop(0)
cmd = ('docker-machine', 'inspect', machine,)
data = json.loads(subprocess.check_output(cmd))
sshPort = data['Driver']['SSHPort']
storePath = data['StorePath']
sshKey = os.path.join(storePath, 'id_rsa')

remoteCmd = " ".join(args)
remoteCmd = "IFS=; sudo -- /bin/sh -c \"%s\"" % remoteCmd

# HACK HACK HACK
# not clear how to compute the real hypervisor address
sys.stderr.write("driver name is %s\n" % data['DriverName'])
if data['DriverName'] == 'vmwarefusion':
    # Fusion, using a DHCP pool
    # (note that docker-machine grovels the vmx file for the full answer)
    remoteAddr = data['Driver']['IPAddress']
else:
    # dumb, assume some sort of host-only port forwarding
    remoteAddr = 'localhost'

# scrape this from 'docker-machine --debug scp'
cmd = ('ssh',
       '-oPasswordAuthentication=no',
       '-oIdentitiesOnly=yes',
       '-oStrictHostKeyChecking=no',
       '-oUserKnownHostsFile=/dev/null',
       '-oLogLevel=quiet',
       '-oConnectionAttempts=3',
       '-oConnectTimeout=10',
       '-i', sshKey,
       '-p', str(sshPort),
       '-oUser=docker',
       remoteAddr,
       '--',
       '/bin/sh', '-c', remoteCmd,)

subprocess.check_call(cmd)
sys.exit(0)
